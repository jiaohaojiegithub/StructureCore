// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudeyPlatFromDB.Models;

namespace StudeyPlatFromDB.Migrations
{
    [DbContext(typeof(StudyPlatformContext))]
    partial class StudyPlatformContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudeyPlatFromDB.Models.SAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasColumnName("area")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Areaid")
                        .HasColumnName("areaid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Isdefault")
                        .HasColumnName("isdefault");

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Postcode")
                        .HasColumnName("postcode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .HasColumnName("province")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Street")
                        .HasColumnName("street")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Update")
                        .HasColumnName("update")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("S_Address");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnName("enddate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Ischeck")
                        .HasColumnName("ischeck");

                    b.Property<int?>("Istest")
                        .HasColumnName("istest");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnName("startdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Sumscore")
                        .HasColumnName("sumscore");

                    b.Property<int?>("Testpaperid")
                        .HasColumnName("testpaperid");

                    b.Property<int?>("Testtime")
                        .HasColumnName("testtime");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Answer");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SAnswersub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnName("answer")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("Answerid")
                        .HasColumnName("answerid");

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Ischeck")
                        .HasColumnName("ischeck");

                    b.Property<int?>("Isright")
                        .HasColumnName("isright");

                    b.Property<int>("Score")
                        .HasColumnName("score");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Subjectid")
                        .HasColumnName("subjectid");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Answersub");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Categoryname")
                        .HasColumnName("categoryname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Cruid")
                        .HasColumnName("cruid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Parentid")
                        .HasColumnName("parentid");

                    b.Property<string>("Permit")
                        .HasColumnName("permit")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("S_Category");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasMaxLength(4000);

                    b.Property<int?>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Integral")
                        .HasColumnName("integral");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Comment");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SCommentReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnName("author")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Commentid")
                        .HasColumnName("commentid");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasMaxLength(4000);

                    b.Property<int?>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Integral")
                        .HasColumnName("integral");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_CommentReply");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bgimg")
                        .HasColumnName("bgimg")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Categoryid")
                        .HasColumnName("categoryid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Cruid")
                        .HasColumnName("cruid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Detail")
                        .HasColumnName("detail");

                    b.Property<string>("Duration")
                        .HasColumnName("duration")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Enddate")
                        .HasColumnName("enddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Fileurl")
                        .HasColumnName("fileurl")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Permit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("permit")
                        .HasDefaultValueSql("((1))")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Readnum")
                        .HasColumnName("readnum");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(50);

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.Property<DateTime?>("Update")
                        .HasColumnName("update")
                        .HasColumnType("datetime");

                    b.Property<string>("Upuid")
                        .HasColumnName("upuid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Videoimg")
                        .HasColumnName("videoimg")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Course");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SDepot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DepotName")
                        .HasColumnName("depotName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .HasColumnName("province")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("S_Depot");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SEntryForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Depotname")
                        .HasColumnName("depotname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Timeid")
                        .HasColumnName("timeid");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("S_EntryForm");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SEntryTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Time")
                        .HasColumnName("time")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_EntryTime");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SFeedBack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Isreply")
                        .HasColumnName("isreply");

                    b.Property<string>("Reply")
                        .HasColumnName("reply")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("Replydate")
                        .HasColumnName("replydate")
                        .HasColumnType("datetime");

                    b.Property<string>("Replyname")
                        .HasColumnName("replyname")
                        .HasMaxLength(50);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_FeedBack");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SGoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ExchangeTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("exchangeTime")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Goodsimg")
                        .HasColumnName("goodsimg")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Goodsname")
                        .HasColumnName("goodsname")
                        .HasMaxLength(200);

                    b.Property<int?>("Integral")
                        .HasColumnName("integral");

                    b.Property<int?>("Online")
                        .HasColumnName("online");

                    b.Property<string>("Remark")
                        .HasColumnName("remark")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Stock")
                        .HasColumnName("stock");

                    b.HasKey("Id");

                    b.ToTable("S_Goods");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Allcourse")
                        .HasColumnName("allcourse");

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Comment")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Feedback")
                        .HasColumnName("feedback");

                    b.Property<int?>("Grade")
                        .HasColumnName("grade");

                    b.Property<string>("Gradename")
                        .HasColumnName("gradename")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Greenhand")
                        .HasColumnName("greenhand");

                    b.Property<int?>("Professionalknowledge")
                        .HasColumnName("professionalknowledge");

                    b.Property<int?>("Reg")
                        .HasColumnName("reg");

                    b.Property<int?>("Reply")
                        .HasColumnName("reply");

                    b.Property<int?>("Salesskill")
                        .HasColumnName("salesskill");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Grade");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SGradeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Grade")
                        .HasColumnName("grade");

                    b.Property<string>("Gradename")
                        .HasColumnName("gradename")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Staus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("staus")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("S_GradeType");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SIntegral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Integral")
                        .HasColumnName("integral");

                    b.Property<int?>("Relateid")
                        .HasColumnName("relateid");

                    b.Property<string>("Remark")
                        .HasColumnName("remark")
                        .HasMaxLength(50);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Integral");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SIntegralRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Integral")
                        .HasColumnName("integral");

                    b.Property<string>("Remark")
                        .HasColumnName("remark")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Rolename")
                        .HasColumnName("rolename")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("S_IntegralRole");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Headimgurl")
                        .HasColumnName("headimgurl")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Userid")
                        .HasColumnName("userid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasName("UQ__s_Manage__DD701265117F9D94")
                        .HasFilter("[uid] IS NOT NULL");

                    b.HasIndex("Userid")
                        .IsUnique()
                        .HasName("UQ__s_Manage__CBA1B2560EA330E9")
                        .HasFilter("[userid] IS NOT NULL");

                    b.ToTable("S_Manager");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Cruid")
                        .HasColumnName("cruid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Imgurl")
                        .HasColumnName("imgurl")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Menuname")
                        .HasColumnName("menuname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Sort")
                        .HasColumnName("sort");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("S_Menu");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SMobileCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("S_MobileCode");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SNotice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnName("action")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasMaxLength(1000);

                    b.Property<int?>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Readdate")
                        .HasColumnName("readdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Relateid")
                        .HasColumnName("relateid");

                    b.Property<string>("Replyuid")
                        .HasColumnName("replyuid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Unread")
                        .HasColumnName("unread");

                    b.HasKey("Id");

                    b.ToTable("S_Notice");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("Addressid")
                        .HasColumnName("addressid");

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Goodsid")
                        .HasColumnName("goodsid");

                    b.Property<string>("Goodsname")
                        .HasColumnName("goodsname")
                        .HasMaxLength(200);

                    b.Property<int?>("Integral")
                        .HasColumnName("integral");

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Step")
                        .HasColumnName("step");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Order");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SReadInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Lastdate")
                        .HasColumnName("lastdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Readtime")
                        .HasColumnName("readtime");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Times")
                        .HasColumnName("times");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_ReadInfo");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Cruid")
                        .HasColumnName("cruid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Rolename")
                        .HasColumnName("rolename")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Rolename")
                        .IsUnique()
                        .HasName("UQ__s_Role__4685A0621FCDBCEB")
                        .HasFilter("[rolename] IS NOT NULL");

                    b.ToTable("S_Role");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SRoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Cruid")
                        .HasColumnName("cruid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Menuid")
                        .HasColumnName("menuid");

                    b.Property<int?>("Roleid")
                        .HasColumnName("roleid");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("S_RoleMenu");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Option")
                        .HasColumnName("option")
                        .HasMaxLength(500);

                    b.Property<string>("Right")
                        .HasColumnName("right")
                        .HasMaxLength(500);

                    b.Property<int?>("Score")
                        .HasColumnName("score");

                    b.Property<int?>("Sort")
                        .HasColumnName("sort");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Testpaperid")
                        .HasColumnName("testpaperid");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_Subject");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.STestPaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bgimg")
                        .HasColumnName("bgimg")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Categoryid")
                        .HasColumnName("categoryid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnName("enddate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Isaward")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isaward")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Isend")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isend")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Papertime")
                        .HasColumnName("papertime");

                    b.Property<string>("Remark")
                        .HasColumnName("remark")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Startdate")
                        .HasColumnName("startdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_TestPaper");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Token")
                        .HasColumnName("token")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Update")
                        .HasColumnName("update")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("S_Token");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SUserAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Elapsedtime")
                        .HasColumnName("elapsedtime");

                    b.Property<string>("Pagename")
                        .HasColumnName("pagename")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Startdate")
                        .HasColumnName("startdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Telversion")
                        .HasColumnName("telversion")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_UserAction");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SUserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AllIntegral")
                        .HasColumnName("all_integral");

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Commentnum")
                        .HasColumnName("commentnum");

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Depotid")
                        .HasColumnName("depotid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Depotname")
                        .HasColumnName("depotname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Feedbacknum")
                        .HasColumnName("feedbacknum");

                    b.Property<int?>("Grade")
                        .HasColumnName("grade");

                    b.Property<string>("Headimgurl")
                        .HasColumnName("headimgurl")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int?>("Isreg")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isreg")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Nickname")
                        .HasColumnName("nickname")
                        .HasMaxLength(50);

                    b.Property<string>("Openid")
                        .HasColumnName("openid")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Position")
                        .HasColumnName("position")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .HasColumnName("province")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RealIntegral")
                        .HasColumnName("real_integral");

                    b.Property<DateTime?>("Regdate")
                        .HasColumnName("regdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Replynum")
                        .HasColumnName("replynum");

                    b.Property<int?>("Sex")
                        .HasColumnName("sex");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Unionid")
                        .HasColumnName("unionid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Upuid")
                        .HasColumnName("upuid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(50);

                    b.Property<int?>("Usertype")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("usertype")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("S_UserInfo");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Cruid")
                        .HasColumnName("cruid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Roleid")
                        .HasColumnName("roleid")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Type")
                        .HasColumnName("type");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_UserRole");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Typename")
                        .HasColumnName("typename")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_UserType");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SVideoInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Courseid")
                        .HasColumnName("courseid");

                    b.Property<DateTime?>("Crdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("crdate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Iswatchsure")
                        .HasColumnName("iswatchsure");

                    b.Property<DateTime?>("Lastdate")
                        .HasColumnName("lastdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Sumwatchtime")
                        .HasColumnName("sumwatchtime");

                    b.Property<int?>("Times")
                        .HasColumnName("times");

                    b.Property<string>("Uid")
                        .HasColumnName("uid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Videoname")
                        .HasColumnName("videoname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("S_VideoInfo");
                });

            modelBuilder.Entity("StudeyPlatFromDB.Models.SWxbase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Appid")
                        .HasColumnName("appid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Appsecret")
                        .HasColumnName("appsecret")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Tab")
                        .HasColumnName("tab");

                    b.Property<string>("Token")
                        .HasColumnName("token")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Update")
                        .HasColumnName("update")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("S_WXbase");
                });
#pragma warning restore 612, 618
        }
    }
}
